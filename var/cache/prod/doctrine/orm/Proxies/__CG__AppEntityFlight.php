<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Flight extends \App\Entity\Flight implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'departure', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'arrive', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'hourDeparture', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'dateDeparture', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'dateArrive', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'nbPlace', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'reservation', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'user'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'description', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'image', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'departure', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'arrive', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'hourDeparture', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'dateDeparture', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'dateArrive', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'price', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'nbPlace', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'reservation', '' . "\0" . 'App\\Entity\\Flight' . "\0" . 'user'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Flight $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getHourDeparture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHourDeparture', []);

        return parent::getHourDeparture();
    }

    /**
     * {@inheritDoc}
     */
    public function setHourDeparture($hourDeparture): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHourDeparture', [$hourDeparture]);

        parent::setHourDeparture($hourDeparture);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeparture(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeparture', []);

        return parent::getDeparture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeparture(string $departure): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeparture', [$departure]);

        return parent::setDeparture($departure);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrive(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrive', []);

        return parent::getArrive();
    }

    /**
     * {@inheritDoc}
     */
    public function setArrive(string $arrive): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setArrive', [$arrive]);

        return parent::setArrive($arrive);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDeparture(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDeparture', []);

        return parent::getDateDeparture();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDeparture(\DateTimeInterface $dateDeparture): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDeparture', [$dateDeparture]);

        return parent::setDateDeparture($dateDeparture);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateArrive(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateArrive', []);

        return parent::getDateArrive();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateArrive(\DateTimeInterface $dateArrive): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateArrive', [$dateArrive]);

        return parent::setDateArrive($dateArrive);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice(float $price): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbPlace(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbPlace', []);

        return parent::getNbPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbPlace(int $nbPlace): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbPlace', [$nbPlace]);

        return parent::setNbPlace($nbPlace);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservation(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservation', []);

        return parent::getReservation();
    }

    /**
     * {@inheritDoc}
     */
    public function addReservation(\App\Entity\Reservation $reservation): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReservation', [$reservation]);

        return parent::addReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReservation(\App\Entity\Reservation $reservation): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReservation', [$reservation]);

        return parent::removeReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser(): ?\App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(?\App\Entity\User $user): \App\Entity\Flight
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

}
